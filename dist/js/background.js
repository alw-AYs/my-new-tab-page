console.log("Background script loaded for Manifest V3"),chrome.runtime.onMessage.addListener((e,s,r)=>{switch(console.log("Received message:",e),console.log("From:",s),e.type){case"getBookmarks":return chrome.bookmarks.getTree().then(e=>{r({success:!0,bookmarks:e})}).catch(e=>{console.error("Error getting bookmarks:",e),r({success:!1,error:e.message})}),!0;case"getStorage":return chrome.storage.local.get(e.keys).then(e=>{r({success:!0,data:e})}).catch(e=>{console.error("Error getting storage:",e),r({success:!1,error:e.message})}),!0;case"setStorage":return chrome.storage.local.set(e.data).then(()=>{r({success:!0})}).catch(e=>{console.error("Error setting storage:",e),r({success:!1,error:e.message})}),!0;default:return r({success:!0,message:"Message received"}),!1}}),chrome.runtime.onInstalled.addListener(e=>{console.log("Extension installed:",e.reason),"install"===e.reason&&chrome.storage.local.set({installedAt:(new Date).toISOString(),version:chrome.runtime.getManifest().version})}),chrome.tabs.onUpdated.addListener((e,s,r)=>{"complete"===s.status&&r.url&&console.log("Tab updated:",r.url)}),chrome.runtime.onStartup.addListener(()=>{console.log("Extension started")});
